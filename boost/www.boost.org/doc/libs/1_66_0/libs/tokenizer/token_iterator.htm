<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta http-equiv="Content-Language" content="en-us">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Microsoft FrontPage 6.0">
  <meta name="ProgId" content="FrontPage.Editor.Document">

  <title>Boost Token Iterator - 1.66.0</title>
<link rel="icon" href="/favicon.ico" type="image/ico"><link rel="stylesheet" type="text/css" href="../../../../../style-v2/section-basic.css" tppabs="https://www.boost.org/style-v2/section-basic.css"><meta name="viewport" content="width=device-width,initial-scale=1.0"/></head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000EE" vlink="#551A8B" alink=
"#FF0000">  <div id="boost-common-heading-doc">
    <div class="heading-inner">
  <div class="heading-placard"></div>

  <h1 class="heading-title">
  <a href="../../../../../index.htm" tppabs="https://www.boost.org/">
  <img src="../../../../../gfx/space.png" tppabs="https://www.boost.org/gfx/space.png" alt= "Boost C++ Libraries" class="heading-logo" />
  <span class="heading-boost">Boost</span>
  <span class="heading-cpplibraries">C++ Libraries</span>
  </a></h1>

  <p class="heading-quote">
  <q>...one of the most highly
  regarded and expertly designed C++ library projects in the
  world.</q> <span class="heading-attribution">&mdash; <a href=
  "javascript:if(confirm('http://www.gotw.ca/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.gotw.ca/'" tppabs="http://www.gotw.ca/" class="external">Herb Sutter</a> and <a href=
  "javascript:if(confirm('http://en.wikipedia.org/wiki/Andrei_Alexandrescu  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://en.wikipedia.org/wiki/Andrei_Alexandrescu'" tppabs="http://en.wikipedia.org/wiki/Andrei_Alexandrescu" class="external">Andrei
  Alexandrescu</a>, <a href=
  "javascript:if(confirm('http://safari.awprofessional.com/?XmlId=0321113586  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://safari.awprofessional.com/?XmlId=0321113586'" tppabs="http://safari.awprofessional.com/?XmlId=0321113586" class="external">C++
  Coding Standards</a></span></p>
</div>

  </div>

  <div id="boost-common-heading-doc-spacer"></div>
<div class="boost-common-header-notice"><a class="boost-common-header-inner" href="javascript:if(confirm('https://www.boost.org/doc/libs/release/libs/tokenizer/token_iterator.htm  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个与它的启始地址很远的链接。如果你增大启始地址域内深度设置, 该文件将被加入下载队列。  \n\n你想在服务器上打开它?'))window.location='https://www.boost.org/doc/libs/release/libs/tokenizer/token_iterator.htm'" tppabs="https://www.boost.org/doc/libs/release/libs/tokenizer/token_iterator.htm">This is the documentation for an old version of Boost.
                Click here to view this page for the latest version.</a></div>

  <p><img src="../../boost.png" tppabs="https://www.boost.org/doc/libs/1_66_0/boost.png" alt="C++ Boost" width="277" height=
  "86"><br></p>

  <h1 align="center">Token Iterator</h1>
  <pre>
template &lt;
        class TokenizerFunc = char_delimiters_separator&lt;char&gt;, 
        class Iterator = std::string::const_iterator,
        class Type = std::string
&gt;
class token_iterator_generator 
</pre>
  <pre>
template&lt;class Type, class Iterator, class TokenizerFunc&gt;
typename token_iterator_generator&lt;TokenizerFunc,Iterator,Type&gt;::type 
make_token_iterator(Iterator begin, Iterator end,const TokenizerFunc&amp; fun)

</pre>

  <p>The token iterator serves to provide an iterator view of the tokens in a
  parsed sequence.</p>

  <h2>Example</h2>
  <pre>
/// simple_example_5.cpp
#include&lt;iostream&gt;
#include&lt;boost/token_iterator.hpp&gt;
#include&lt;string&gt;

int main(){
   using namespace std;
   using namespace boost;
   string s = "12252001";
   int offsets[] = {2,2,4};
   offset_separator f(offsets, offsets+3);
   typedef token_iterator_generator&lt;offset_separator&gt;::type Iter;
   Iter beg = make_token_iterator&lt;string&gt;(s.begin(),s.end(),f);
   Iter end = make_token_iterator&lt;string&gt;(s.end(),s.end(),f); 
   // The above statement could also have been what is below
   // Iter end;
   for(;beg!=end;++beg){
     cout &lt;&lt; *beg &lt;&lt; "\n";
   }
}
</pre>

  <p>&nbsp;</p>

  <h3>Template Parameters</h3>

  <table border="1" summary="">
    <tr>
      <th>Parameter</th>

      <th>Description</th>
    </tr>

    <tr>
      <td><tt>TokenizerFunc</tt></td>

      <td>The TokenizerFunction used to parse the sequence.</td>
    </tr>

    <tr>
      <td><tt>Iterator</tt></td>

      <td>The type of the iterator the specifies the sequence.</td>
    </tr>

    <tr>
      <td><tt>Type</tt></td>

      <td>The type of the token, typically string.</td>
    </tr>
  </table>

  <h2>Model of</h2>

  <p>The category of Iterator, up to and including Forward Iterator. Anything
  higher will get scaled down to Forward Iterator.</p>

  <h2>Related Types</h2>

  <table border="1" summary="">
    <tr>
      <td>
        <p align="center"><strong>Type</strong></p>
      </td>

      <td>
        <p align="center"><strong>Remarks</strong></p>
      </td>
    </tr>

    <tr>
      <td>token_iterator_generator::type</td>

      <td>The type of the token iterator.</td>
    </tr>
  </table>

  <h2>Creation</h2>
  <pre>
template&lt;class Type, class Iterator, class TokenizerFunc&gt;
typename token_iterator_generator&lt;TokenizerFunc,Iterator,Type&gt;::type 
make_token_iterator(Iterator begin, Iterator end,const TokenizerFunc&amp; fun)
</pre>

  <table border="1" summary="">
    <tr>
      <td>
        <p align="center"><strong>Parameter</strong></p>
      </td>

      <td>
        <p align="center"><strong>Description</strong></p>
      </td>
    </tr>

    <tr>
      <td>begin</td>

      <td>The beginning of the sequence to be parsed.</td>
    </tr>

    <tr>
      <td>end</td>

      <td>Past the end of the sequence to be parsed.</td>
    </tr>

    <tr>
      <td>fun</td>

      <td>A functor that is a model of TokenizerFunction</td>
    </tr>
  </table>

  <p>&nbsp;</p>
  <hr>

  <p><a href="javascript:if(confirm('http://validator.w3.org/check?uri=referer  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://validator.w3.org/check?uri=referer'" tppabs="http://validator.w3.org/check?uri=referer"><img border="0" src=
  "../../../1_60_0/libs/numeric/odeint/valid-html401.png" tppabs="https://www.boost.org/doc/libs/1_66_0/doc/images/valid-html401.png" alt="Valid HTML 4.01 Transitional"
  height="31" width="88"></a></p>

  <p>Revised 
  <!--webbot bot="Timestamp" s-type="EDITED" s-format="%d %B, %Y" startspan -->25
  December, 2006<!--webbot bot="Timestamp" endspan i-checksum="38518" --></p>

  <p><i>Copyright &copy; 2001 John R. Bandela</i></p>

  <p><i>Distributed under the Boost Software License, Version 1.0. (See
  accompanying file <a href="../../LICENSE_1_0.txt.htm" tppabs="https://www.boost.org/doc/libs/1_66_0/LICENSE_1_0.txt">LICENSE_1_0.txt</a> or
  copy at <a href=
  "../../../../../LICENSE_1_0.txt" tppabs="http://www.boost.org/LICENSE_1_0.txt">http://www.boost.org/LICENSE_1_0.txt</a>)</i></p>
</body>
</html>
